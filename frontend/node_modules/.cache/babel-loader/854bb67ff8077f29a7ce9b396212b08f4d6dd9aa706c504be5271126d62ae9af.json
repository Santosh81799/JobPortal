{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { COMPANY_API_ENDPOINT } from '../Endpoints/constant';\nimport { setSingleCompany } from '../../redux/CompanySlice';\nconst GetCompanyById = companyId => {\n  _s();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const fetchSingleCompany = async () => {\n      try {\n        const res = await axios.get(`${COMPANY_API_ENDPOINT}/get/${companyId}`, {\n          withCredentials: true\n        });\n        con;\n        if (res.data.success) {\n          dispatch(setSingleCompany(res.data.company));\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchSingleCompany();\n  }, [companyId, dispatch]);\n};\n_s(GetCompanyById, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n_c = GetCompanyById;\nexport default GetCompanyById;\nvar _c;\n$RefreshReg$(_c, \"GetCompanyById\");","map":{"version":3,"names":["useEffect","axios","useDispatch","COMPANY_API_ENDPOINT","setSingleCompany","GetCompanyById","companyId","_s","dispatch","fetchSingleCompany","res","get","withCredentials","con","data","success","company","error","console","log","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/Tamplates/intern_project/Job-Portal/frontend/src/Components/Hooks/GetCompanyById.js"],"sourcesContent":["import { useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useDispatch } from 'react-redux'\r\nimport {COMPANY_API_ENDPOINT} from '../Endpoints/constant'\r\nimport { setSingleCompany } from '../../redux/CompanySlice';\r\n\r\nconst GetCompanyById = (companyId) => {\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        const fetchSingleCompany = async () => {\r\n            try {\r\n                const res = await axios.get(`${COMPANY_API_ENDPOINT}/get/${companyId}`, { withCredentials: true })\r\n                con\r\n                if (res.data.success) {\r\n                    dispatch(setSingleCompany(res.data.company));\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchSingleCompany();\r\n    }, [companyId, dispatch])\r\n}\r\n\r\nexport default GetCompanyById;"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAAQC,oBAAoB,QAAO,uBAAuB;AAC1D,SAASC,gBAAgB,QAAQ,0BAA0B;AAE3D,MAAMC,cAAc,GAAIC,SAAS,IAAK;EAAAC,EAAA;EAClC,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9BF,SAAS,CAAC,MAAM;IACZ,MAAMS,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,GAAGR,oBAAoB,QAAQG,SAAS,EAAE,EAAE;UAAEM,eAAe,EAAE;QAAK,CAAC,CAAC;QAClGC,GAAG;QACH,IAAIH,GAAG,CAACI,IAAI,CAACC,OAAO,EAAE;UAClBP,QAAQ,CAACJ,gBAAgB,CAACM,GAAG,CAACI,IAAI,CAACE,OAAO,CAAC,CAAC;QAChD;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;IACJ,CAAC;IACDR,kBAAkB,CAAC,CAAC;EACxB,CAAC,EAAE,CAACH,SAAS,EAAEE,QAAQ,CAAC,CAAC;AAC7B,CAAC;AAAAD,EAAA,CAhBKF,cAAc;EAAA,QACCH,WAAW;AAAA;AAAAkB,EAAA,GAD1Bf,cAAc;AAkBpB,eAAeA,cAAc;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}