{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setAllJobs, setSearchJobByText } from '../../redux/JobSlice';\nimport { JOB_API_ENDPOINT } from '../Endpoints/constant';\nconst useGetAllJobs = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    searchJobQuery\n  } = useSelector(store => store.job);\n  console.log(searchJobQuery);\n  useEffect(() => {\n    const fetchAllJobs = async () => {\n      try {\n        const res = await axios.get(`${JOB_API_ENDPOINT}/get ? keyword = ${searchJobQuery}`, {\n          withCredentials: true\n        });\n        if (res.data.success) {\n          dispatch(setAllJobs(res.data.jobs));\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchAllJobs();\n  }, []);\n};\n_s(useGetAllJobs, \"GQgl04ANvXUWTTPn7kZ/c/FqX+Y=\", false, function () {\n  return [useDispatch, useSelector];\n});\nexport default useGetAllJobs;","map":{"version":3,"names":["useEffect","axios","useDispatch","useSelector","setAllJobs","setSearchJobByText","JOB_API_ENDPOINT","useGetAllJobs","_s","dispatch","searchJobQuery","store","job","console","log","fetchAllJobs","res","get","withCredentials","data","success","jobs","error"],"sources":["C:/Users/Admin/Desktop/Tamplates/intern_project/Job-Portal/frontend/src/Components/Hooks/GetAllJobs.js"],"sourcesContent":["import { useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setAllJobs, setSearchJobByText } from '../../redux/JobSlice';\r\nimport { JOB_API_ENDPOINT } from '../Endpoints/constant'\r\n\r\nconst useGetAllJobs = () => {\r\n    const dispatch = useDispatch();\r\n    const {searchJobQuery} = useSelector(store=>store.job)\r\n    console.log(searchJobQuery);\r\n    useEffect(() => {\r\n        const fetchAllJobs = async () => {\r\n            try {\r\n                const res = await axios.get(`${JOB_API_ENDPOINT}/get ? keyword = ${searchJobQuery}`, { withCredentials: true })\r\n                if (res.data.success) {\r\n                    dispatch(setAllJobs(res.data.jobs));\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchAllJobs();\r\n    }, [])\r\n}\r\n\r\nexport default useGetAllJobs;"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,EAAEC,kBAAkB,QAAQ,sBAAsB;AACrE,SAASC,gBAAgB,QAAQ,uBAAuB;AAExD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM;IAACQ;EAAc,CAAC,GAAGP,WAAW,CAACQ,KAAK,IAAEA,KAAK,CAACC,GAAG,CAAC;EACtDC,OAAO,CAACC,GAAG,CAACJ,cAAc,CAAC;EAC3BV,SAAS,CAAC,MAAM;IACZ,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,GAAGX,gBAAgB,oBAAoBI,cAAc,EAAE,EAAE;UAAEQ,eAAe,EAAE;QAAK,CAAC,CAAC;QAC/G,IAAIF,GAAG,CAACG,IAAI,CAACC,OAAO,EAAE;UAClBX,QAAQ,CAACL,UAAU,CAACY,GAAG,CAACG,IAAI,CAACE,IAAI,CAAC,CAAC;QACvC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC;MACtB;IACJ,CAAC;IACDP,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;AACV,CAAC;AAAAP,EAAA,CAjBKD,aAAa;EAAA,QACEL,WAAW,EACHC,WAAW;AAAA;AAiBxC,eAAeI,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}