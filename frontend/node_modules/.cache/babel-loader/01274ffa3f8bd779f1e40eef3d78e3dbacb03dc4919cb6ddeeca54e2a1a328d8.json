{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { COMPANY_API_ENDPOINT } from '../Endpoints/constant';\nimport { setCompanies } from '../../redux/CompanySlice';\nconst GetAllCompanies = companyId => {\n  _s();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        const res = await axios.get(`${COMPANY_API_ENDPOINT}/get`, {\n          withCredentials: true\n        });\n        if (res.data.success) {\n          dispatch(setCompanies(res.data.companies));\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchCompanies();\n  }, [companyId, dispatch]);\n};\n_s(GetAllCompanies, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n_c = GetAllCompanies;\nexport default GetAllCompanies;\nvar _c;\n$RefreshReg$(_c, \"GetAllCompanies\");","map":{"version":3,"names":["useEffect","axios","useDispatch","COMPANY_API_ENDPOINT","setCompanies","GetAllCompanies","companyId","_s","dispatch","fetchCompanies","res","get","withCredentials","data","success","companies","error","console","log","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/Tamplates/intern_project/Job-Portal/frontend/src/Components/Hooks/GetAllCompanies.js"],"sourcesContent":["import { useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useDispatch } from 'react-redux'\r\nimport {COMPANY_API_ENDPOINT} from '../Endpoints/constant'\r\nimport { setCompanies } from '../../redux/CompanySlice'\r\nconst GetAllCompanies = (companyId) => {\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        const fetchCompanies = async () => {\r\n            try {\r\n                const res = await axios.get(`${COMPANY_API_ENDPOINT}/get`, { withCredentials: true })\r\n                if (res.data.success) {\r\n                    dispatch(setCompanies(res.data.companies));\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchCompanies();\r\n    }, [companyId, dispatch])\r\n}\r\n\r\nexport default GetAllCompanies;"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAAQC,oBAAoB,QAAO,uBAAuB;AAC1D,SAASC,YAAY,QAAQ,0BAA0B;AACvD,MAAMC,eAAe,GAAIC,SAAS,IAAK;EAAAC,EAAA;EACnC,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9BF,SAAS,CAAC,MAAM;IACZ,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,GAAGR,oBAAoB,MAAM,EAAE;UAAES,eAAe,EAAE;QAAK,CAAC,CAAC;QACrF,IAAIF,GAAG,CAACG,IAAI,CAACC,OAAO,EAAE;UAClBN,QAAQ,CAACJ,YAAY,CAACM,GAAG,CAACG,IAAI,CAACE,SAAS,CAAC,CAAC;QAC9C;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;IACJ,CAAC;IACDP,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,CAACH,SAAS,EAAEE,QAAQ,CAAC,CAAC;AAC7B,CAAC;AAAAD,EAAA,CAfKF,eAAe;EAAA,QACAH,WAAW;AAAA;AAAAiB,EAAA,GAD1Bd,eAAe;AAiBrB,eAAeA,eAAe;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}